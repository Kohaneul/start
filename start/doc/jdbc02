JDBC 프로그램 작성 순서
	0. JDBC 드라이버를 준비
	1. 드라이버를 로딩한다.
		Class.forName(클래스경로);
	2. 데이터베이스에 접속한다.
		Connection con = DriverManager.getConnection(String url, String id, String pw);
		--------------------------각 DBMS들마다 조금씩 작업이 다르다.----------------------
		
	3. JDBC와 실제 DBMS 사이의 명령을 전달할 수 있는 도구를 만들어야 한다.
		오라클은 서버 데이터베이스이다. 즉, 프로그램이 동작하는 컴퓨터와 데이터베이스가 있는 컴퓨터가 다를 수 있다.
		사용하는 클래스(인터페이스) Statement
		만드는 방법 : Statement stmt = con.createStatement();
		
		참고 ] 질의 명령을 실행하는 방법
				(Statement에 질의명령을 실어서 보내는 방법)
					
					1. execute(String sql) : 질의명령을 실행한 후 JDBC에게 보고하지 않는다.
							반환값은 boolean 타입인데 이 반환값의 의미는 데이터베이스가 JDBC에게 명령을 받았는지만 알려주는 역할.
							주로 실행 여부와 관계없는 명령을 보낼때 
							CREATE, INSERT, ........ 주로 사용하는 명령
					2. ★ executeQuery(String sql) : 반환값이 ResultSet인데, 질의명령의 실행결과 탄생하는 인라인테이블(가상의 테이블, 메모리상의 가상테이블)을
												   관리하는 클래스이다. 100% SELECT 질의명령에 사용한다.
					
					3.executeUpdate(String sql) : 반환값이 int인데 이 반환값의 의미는 질의명령 실행결과 수정된 데이터의 갯수를 반환해준다.
							예 ] UPDATE 질의명령의 실행결과 몇개의 행이 수정되었는지.. 
								 DELETE 질의명령의 실행결과 몇개의 행이 삭제되었는지...
								 
								 주로 질의 명령의 실행 결과 여부를 판단해야할 경우 사용하는 함수.
									UPDATE, DELETE, INSERT,...
									
									
									
					